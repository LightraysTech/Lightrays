.lr-box {
  font-family: var(--component-font);
  font-size: 1em;
  font-weight: normal;
  line-height: inherit;
  color: var(--color-text);
  border-radius: 4px;
  padding: 16px;
  box-sizing: border-box;

  background-color: var(--component-background);
  box-shadow: var(--shadow-1);
  border: none;

  &.flat,
  .flat-components > &,
  & > & {
    box-shadow: none;
    border: var(--component-stroke);
  }

  &.important,
  .important-components > & {
    background-color: var(--primary);
  }

  &.interactive {
    cursor: pointer;

    transition: background-color,
    color,
    box-shadow,
    border {
      duration: 0.2s;
      timing-function: var(--curve-ease);
    }

    &:hover {
      box-shadow: var(--shadow-2);
      background-color: var(--component-hover);
    }

    &:active {
      box-shadow: var(--shadow-0);
      background-color: var(--component-active);
    }

    &.flat {
      &:hover {
        box-shadow: var(--shadow-0);
      }
    }

    &.subtle {
      &:not(:hover):not(:active) {
        background-color: none;
        box-shadow: none;
      }
    }

    &.important {
      &:hover {
        background-color: var(--light);
      }

      &:active {
        background-color: var(--dark);
      }
    }
  }

  &.inline,
  .inline-components > & {
    display: inline-block;
    padding: 8px 16px;
  }

  &.small,
  .small-components > & {
    padding: 8px;

    &.inline {
      padding: 4px 8px;
    }
  }
}

.lr-list {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin: 8px 0;

  & > div {
    @extend .lr-box;
    animation: box-load-in 0.2s ease-out both;

    @for $i from 1 through 15 {
      &:nth-child(#{$i}) {
        animation-delay: calc(0.03s * #{$i});
      }
    }
  }

  &.flat > div {
    @extend .flat;
  }

  &.small > div {
    @extend .small;
  }

  &.important > div {
    @extend .important;
  }

  &.transparent > div {
    @extend .transparent;
  }
}


button,
select,
input[type=button],
input[type=reset],
input[type=submit] {
  text-align: center;

  &:not(:disabled) {
    @extend .lr-box, .interactive, .inline;
  }

  &:disabled {
    @extend .lr-box, .flat, .inline;
    color: var(--subtle-text-color);
    background-color: var(--component-disabled);
  }

  &:has(.fluentIcon:only-child) {
    padding: 10px 10px;

    .fluentIcon {
      display: block;
    }
  }

  &.small,
  .small-components > & {
    &:has(.fluentIcon:only-child) {
      padding: 6px 6px;
    }

    & > .fluentIcon:not(:only-child) {
      margin-right: 4px;
    }
  }

  & > .fluentIcon:not(:only-child) {
    margin-right: 8px;
  }

  .transparent,
  .transparent:hover,
  .transparent:active {
    background-color: transparent;
    border: none;
    box-shadow: none;
  }
}

input {
  &:not([type=reset]):not([type=button]):not([type=submit]) {
    padding: 8px 16px; //test
    @extend .lr-box, .inline;
    --underline-color: var(--primary);

    box-shadow: 0 2px 0 0 transparent, var(--shadow-1);
    transition: box-shadow 0.2s var(--curve-ease);

    &:focus {
      box-shadow: 0 2px 0 0 var(--underline-color), var(--shadow-2);
    }

    &.flat:not(.shadow),
    .flat-components > &:not(.shadow),
    .lr-box &:not(.shadow) {
      box-shadow: 0 2px 0 0 transparent;

      &:focus {
        border-bottom-color: var(--underline-color);
        box-shadow: 0 1px 0 0 var(--underline-color), var(--shadow-2);
      }
    }

    &:disabled {
      @extend .flat;
      color: var(--subtle-text-color);
      background-color: var(--component-disabled);
    }

    &:user-invalid {
      --underline-color: var(--alert);
    }

    &[type="color"] {
      padding: 0;
      border-radius: 0;
      background: var(--component-background);
    }

    &[type="search"] {
      background-image: url("./img/search.png");
      background-size: 15px;
      padding-left: 36px;
      background-position-x: 12px;
      background-position-y: center;
      background-repeat: no-repeat;

      &:focus {
        background-size: 18px;
        background-position-x: 11px;
        transition: background .2s var(--curve-ease);
      }
    }

    &[type=checkbox] {
      align-self: center;
      -webkit-appearance: none;
      appearance: none;
      box-shadow: none;
      border: none !important;
      border-radius: 6px;
      width: 24px;
      height: 24px;
      vertical-align: bottom;
      padding: 0;
      margin: 0;
      cursor: pointer;

      &:checked {
        background: url("./img/checkbox.png") no-repeat center center;
        background-size: 13px;
        background-color: var(--light);
        outline-color: var(--light);
      }

      &.small {
        height: 18px;
        width: 18px;
        border-radius: 4px;
        vertical-align: text-bottom;
        background-size: 9px;
      }
    }

    &[type="range"] {
      //-webkit-appearance: none; appearance: none;
      height: 0px;
      background: var(--color-darker);
      outline: none; // Remove outline 
      -webkit-transition: .1s;
      transition: all .1s;
      padding-left: 0;
      padding-right: 0;
      border: none !important;
      outline: none !important;
      box-shadow: none;

      &:focus {
        box-shadow: none;
      }
    }
  }

  &[type=submit] {
    @extend .important;
  }

}

label {
  display: inline-block;
  margin: 2px 0;
  font-size: 1em;
  font-weight: 600;

  &.left {
    margin: 0;
    margin-right: 8px;
  }

  &.right {
    margin: 0;
    margin-left: 8px;
  }


  &.disabled {
    color: var(--subtle-text-color);
  }

  &[for] {
    cursor: pointer
  }

  .small,
  .small-components > & {
    // TODO label.small
  }
}